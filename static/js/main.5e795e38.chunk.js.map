{"version":3,"sources":["components/Burger/UpperBread.js","components/Burger/LowerBread.js","components/Burger/BurgerContent.js","components/Burger/Burger.js","components/Footer/BurgerControlButtons.js","components/Footer/ItemControl.js","components/Shared/Popup.js","components/Footer/BurgerControls.js","assets/burger.png","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["UpperBread","className","LowerBread","BurgerContent","items","useContext","itemContext","useState","addedItems","setAddedItems","useEffect","filter","item","count","length","map","result","i","push","id","itemName","Burger","BurgerControlButtons","props","incItem","incItemContext","dcrItem","dcrItemContext","itemCount","onClick","ItemControl","this","Consumer","value","Component","Popup","title","content","closePopup","price","orderPlaced","BurgerControl","totalItems","isOpen","setIsOpen","setPrice","toggleOrderPopup","reduce","totalPrice","bgItem","index","Header","src","burgerLogo","React","createContext","App","burgerItems","setItems","setTotalItems","isOrderPlaced","setOrderPlaced","total","Provider","prevItemState","val","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e795e38.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction UpperBread() {\r\n  return (\r\n    <div className=\"upperBread breads\">\r\n      <div className=\"seed-1\"></div>\r\n      <div className=\"seed-2\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpperBread;\r\n","import React from \"react\";\r\n\r\nfunction LowerBread() {\r\n  return <div className=\"lowerBread breads\"></div>;\r\n}\r\n\r\nexport default LowerBread;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { itemContext } from \"./../../App\";\r\n\r\nfunction BurgerContent() {\r\n  const items = useContext(itemContext);\r\n  const [addedItems, setAddedItems] = useState([]);\r\n\r\n  useEffect(() => (\r\n    setAddedItems(() => items.filter((item) => item.count > 0))\r\n  ), items)\r\n\r\n  return (\r\n    <div className=\"bgContent\">\r\n      {addedItems.length == 0 ? (\r\n        <div className=\"initial-msg\">Please start adding ingredients</div>\r\n      ) : (\r\n        addedItems.map((item) => {\r\n          let result = [];\r\n          for (let i=0; i<item.count; i++){\r\n            result.push(<div key={item.itemName + `-${i}`} className={'item-' + item.id}> </div>)\r\n          }\r\n          return result;\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerContent;\r\n","import React from \"react\";\r\nimport UpperBread from \"./UpperBread\";\r\nimport LowerBread from \"./LowerBread\";\r\nimport BurgerContent from \"./BurgerContent\";\r\nimport \"./../../styles/burger.scss\";\r\n\r\nfunction Burger() {\r\n  return (\r\n    <div className=\"burger\">\r\n      <div className=\"burger-content\">\r\n        <UpperBread />\r\n        <BurgerContent />\r\n        <LowerBread />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Burger;\r\n","import React, { useContext } from \"react\";\r\nimport { itemContext, incItemContext, dcrItemContext } from './../../App';\r\n\r\nfunction BurgerControlButtons(props) {\r\n  const item = useContext(itemContext);\r\n  const incItem = useContext(incItemContext);\r\n  const dcrItem = useContext(dcrItemContext);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={\r\n          (props.itemCount == 0 ? \"disabled \" : \"\") +\r\n          props.itemName +\r\n          \" decrement-btn btn\"\r\n        }\r\n        onClick= {() => dcrItem(props.itemName)}\r\n      >\r\n        Less\r\n      </button>\r\n\r\n      <button\r\n        className={props.itemName + \" increment-btn btn\"}\r\n        onClick={() => incItem(props.itemName)}\r\n      >\r\n        More\r\n      </button>\r\n    </>\r\n  );\r\n}\r\nexport default BurgerControlButtons;\r\n","import React, { Component } from \"react\";\r\nimport BurgerControlButtons from \"./BurgerControlButtons\";\r\nimport { itemContext } from \"./../../App\";\r\n\r\nclass ItemControl extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    const { itemName } = this.props;\r\n    return (\r\n      <div className={itemName + \"-container bgItem\"}>\r\n        <span className=\"title\"> {itemName} </span>\r\n        <itemContext.Consumer>\r\n          {(value) => (\r\n            <BurgerControlButtons\r\n              itemName={itemName}\r\n              itemCount={value.filter(\r\n                (item) => item.itemName == itemName && item.count\r\n              )}\r\n            />\r\n          )}\r\n        </itemContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemControl;\r\n","import React from \"react\";\r\n\r\nfunction Popup({ title, content, closePopup, price, orderPlaced }) {\r\n  return (\r\n    <div className=\"custom-popup\">\r\n      <div className=\"popup-box\">\r\n        <span className=\"title\"> {title} </span> <br />\r\n        <div className=\"content\">\r\n          <ul>\r\n            {content.map((item) => (\r\n              <li key={item.id}>\r\n                {item.itemName} : {item.count}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <span>\r\n            <b>Total Price: {price}</b>\r\n          </span>\r\n        </div>\r\n        <div className=\"popup-buttons\">\r\n          <button className=\"confirm popup-btn\" onClick={() => orderPlaced(true)}> Confirm </button>\r\n          <button className=\"cancel popup-btn\" onClick={closePopup}>\r\n            {\" \"}\r\n            Cancel{\" \"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport ItemControl from \"./ItemControl\";\r\nimport { itemContext } from \"./../../App\";\r\nimport Popup from \"../Shared/Popup\";\r\n\r\nfunction BurgerControl({ totalItems, orderPlaced }) {\r\n  const items = useContext(itemContext);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [price, setPrice] = useState(4);\r\n\r\n  const toggleOrderPopup = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() =>\r\n    setPrice(() =>\r\n      items.reduce(\r\n        (totalPrice, item) => totalPrice + item.price * item.count,\r\n        4\r\n      )\r\n    )\r\n  );\r\n\r\n  const title = \"Your order summary is here: \";\r\n  const content = items;\r\n\r\n  return (\r\n    <div className=\"burger-controls\">\r\n      <div className=\"price-details\">Current Price: $ {price}</div>\r\n      <div className=\"items-container\">\r\n        {items.map((bgItem, index) => (\r\n          <ItemControl key={index} itemName={bgItem.itemName} />\r\n        ))}\r\n      </div>\r\n      <div className=\"order-button\">\r\n        <button\r\n          className={\r\n            (totalItems > 0 ? \"\" : \"disabled\") + \" order order-btn btn\"\r\n          }\r\n          onClick={toggleOrderPopup}\r\n        >\r\n          Order Now\r\n        </button>\r\n      </div>\r\n      {isOpen && (\r\n        <Popup\r\n          content={content}\r\n          title={title}\r\n          closePopup={toggleOrderPopup}\r\n          orderPlaced={orderPlaced}\r\n          price={price}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerControl;\r\n","export default __webpack_public_path__ + \"static/media/burger.ec69c7f6.png\";","import React, { useContext, useState, useEffect } from \"react\";\r\nimport burgerLogo from \"./../../assets/burger.png\";\r\nimport \"./../../styles/header.scss\";\r\nimport HeaderButton from \"./HeaderButton\";\r\n\r\nfunction Header({ totalItems }) {\r\n  // const headerButtons = [\r\n  //   {\r\n  //     id: 1,\r\n  //     className: \"bgBuilder\",\r\n  //     value: \"Burger Builder\",\r\n  //     isSelected: true,\r\n  //     isDisabled: false,\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     className: \"chkOut\",\r\n  //     value: \"Checkout\",\r\n  //     isSelected: false,\r\n  //     isDisabled: true,\r\n  //   },\r\n  // ];\r\n\r\n  // const [headerBtns, setHeaderBtns] = useState(headerButtons);\r\n\r\n  // useEffect(() => {\r\n  //   setHeaderBtns((prevHeaderBtnsState) =>\r\n  //     prevHeaderBtnsState.map((btn) =>\r\n  //       btn.id !== 1\r\n  //         ? { ...btn, isDisabled: totalItems > 0 ? false : true }\r\n  //         : { ...btn }\r\n  //     )\r\n  //   );\r\n  // }, [totalItems]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\" id=\"header\">\r\n        <div className=\"logo\">\r\n          <img src={burgerLogo} className=\"burgerLogo\" />\r\n        </div>\r\n        <div className=\"header-buttons\" id=\"header-buttons\">\r\n          {/* {headerBtns.map((btn, index) => (\r\n            <HeaderButton\r\n              key={index}\r\n              className={btn.className}\r\n              value={btn.value}\r\n              isSelected={btn.isSelected}\r\n              isDisabled={btn.isDisabled}\r\n            />\r\n          ))} */}\r\n\r\n          <div className=\"bgBuilder header-button selected\">Burger Builder</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Burger from \"./components/Burger/Burger\";\nimport BurgerControl from \"./components/Footer/BurgerControls\";\nimport Header from \"./components/Header/Header\";\nimport React, { useState, useEffect } from \"react\";\n\nexport const itemContext = React.createContext();\nexport const dcrItemContext = React.createContext();\nexport const incItemContext = React.createContext();\n\nfunction App() {\n  const burgerItems = [\n    {\n      itemName: \"Salad\",\n      price: 1,\n      count: 0,\n      id: 1,\n    },\n    {\n      itemName: \"Tomato\",\n      count: 0,\n      price: 2,\n      id: 2,\n    },\n    {\n      itemName: \"Cheese\",\n      count: 0,\n      price: 3,\n      id: 3,\n    },\n    {\n      itemName: \"Tikki\",\n      count: 0,\n      price: 4,\n      id: 4,\n    },\n  ];\n  const [items, setItems] = useState(burgerItems);\n  const [totalItems, setTotalItems] = useState(0);\n  const [isOrderPlaced, setOrderPlaced] = useState(false);\n  const [isReset, setIsReset] = useState(false);\n\n  const setIsOrderPlaced = (val) => {\n    setOrderPlaced(val);\n  };\n\n  useEffect(\n    () =>\n      setTotalItems(() => items.reduce((total, item) => total + item.count, 0)),\n    items\n  );\n\n  const incrementItem = (itemName) =>\n    setItems((prevItemState) =>\n      prevItemState.map((item) =>\n        item.itemName == itemName\n          ? { ...item, count: item.count + 1 }\n          : { ...item }\n      )\n    );\n\n  const decrementItem = (itemName) =>\n    setItems((prevItemState) =>\n      prevItemState.map((item) =>\n        item.itemName == itemName && item.count > 0\n          ? { ...item, count: item.count - 1 }\n          : { ...item }\n      )\n    );\n\n  const reset = () => {\n    setOrderPlaced(false);\n    setItems(burgerItems);\n  };\n\n  return isOrderPlaced ? (\n    <>\n    <div className=\"order-placed\">\n      <h2>Hurrayy!!! Your Order Placed Successfully!!</h2> <br />\n      <h2>Hope It taste's good!</h2>\n    </div>\n\n      <itemContext.Provider value={items}>\n        <Burger />\n      </itemContext.Provider>\n      <span className=\"reset\" onClick={reset}>\n        back to the app\n      </span>\n    </>\n  ) : (\n    <>\n      <Header totalItems={totalItems} />\n      <itemContext.Provider value={items}>\n        <incItemContext.Provider value={incrementItem}>\n          <dcrItemContext.Provider value={decrementItem}>\n            <Burger />\n            <BurgerControl\n              totalItems={totalItems}\n              orderPlaced={setIsOrderPlaced}\n            />\n          </dcrItemContext.Provider>\n        </incItemContext.Provider>\n      </itemContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}